pipeline {
    agent any
    environment {
        GIT_CREDENTIALS = 'GithubCredential'
        DOCKER_IMAGE = 'dkimane/jenkins'
        DOCKER_CREDENTIALS = 'dockerhub-credentials'
    }
    stages {
        stage('Clone Repository') {
            steps {
                script {
                    echo 'Cloning repository...'
                    git branch: 'main',
                        url: 'https://github.com/ImaneDKHISSI/JenkinsProjet.git',
                        credentialsId: GIT_CREDENTIALS
                }
            }
        }

        stage('Validate Files') {
            steps {
                script {
                    echo 'Validating project structure...'
                    sh 'ls -R ProjetJenkins' // Vérifiez les fichiers et répertoires
                }
            }
        }

        stage('Restore Dependencies for Unit Tests') {
            steps {
                script {
                    echo 'Restoring dependencies for TestUnitaire...'
                    sh 'dotnet restore ProjetJenkins/TestUnitaire/TestUnitaire.csproj'
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    echo 'Running unit tests...'
                    sh 'dotnet test ProjetJenkins/TestUnitaire/TestUnitaire.csproj --no-build'
                }
            }
        }

        stage('Restore Dependencies for Main Project') {
            steps {
                script {
                    echo 'Restoring dependencies for ProjetJenkins...'
                    sh 'dotnet restore ProjetJenkins/ProjetJenkins/ProjetJenkins.csproj'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image...'
                    sh "docker build -t ${DOCKER_IMAGE} -f ProjetJenkins/Dockerfile ./"
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    echo 'Pushing Docker image to Docker Hub...'
                    docker.withRegistry('', DOCKER_CREDENTIALS) {
                        sh "docker push ${DOCKER_IMAGE}"
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline executed successfully! Docker image pushed to Docker Hub.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs for details.'
        }
    }
}
